@model SciArticle.Models.Front.User.ArticleDetailViewModel
@using SciArticle.Models.Object

@{
    ViewData["Title"] = "Article Details";
    int currentPage = 1;
    if (Context.Request.Query.ContainsKey("page"))
    {
        if (int.TryParse(Context.Request.Query["page"], out int page))
        {
            currentPage = page;
        }
    }
}

<div class="container my-4">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-2">
        <h2>@Model.Title</h2>
        <span class="badge @GetStatusClass(Model.Status)">@Model.Status</span>
    </div>
    <div class="mb-3 text-muted">
        <span><i class="bi bi-tag"></i> @Model.Topic</span>
        <span class="ms-3"><i class="bi bi-calendar"></i> @Model.TimeStamp.ToString("yyyy-MM-dd")</span>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5>Abstract</h5>
        </div>
        <div class="card-body">
            <p>@Model.Abstract</p>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5>Content</h5>
        </div>
        <div class="card-body">
            <div class="article-content">
                @{
                    // Display content with proper formatting
                    var paragraphs = Model.Content.Split("\n\n", StringSplitOptions.RemoveEmptyEntries);
                    foreach (var paragraph in paragraphs)
                    {
                        <p>@paragraph</p>
                    }
                }
            </div>
        </div>
    </div>

    <div class="mt-4">
        <div class="d-flex justify-content-between">
            <a asp-action="Dashboard" asp-route-page="@currentPage" class="btn btn-outline-secondary">Back to Dashboard</a>
            <div>
                @if (Model.CanEdit)
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit Article</a>
                    <form asp-controller="Author" asp-action="Cancel" asp-route-id="@Model.Id" asp-route-page="@currentPage" method="post" class="d-inline"
                        onsubmit="return confirm('Are you sure you want to cancel this article? This action cannot be undone.');">
                        <button type="submit" class="btn btn-danger ms-2">Cancel Article</button>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            ArticleStatus.Pending => "bg-warning text-dark",
            ArticleStatus.Approved => "bg-success",
            ArticleStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}