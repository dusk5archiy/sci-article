@model SciArticle.Models.Front.Admin.AdminArticleDetailsViewModel
@using SciArticle.Models.Object

@{
    ViewData["Title"] = "Chi tiết bài báo";
}

<div class="container my-4">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-2">
        <h2>@Model.Title</h2>
        <span class="badge @GetStatusClass(Model.Status)">@GetStatusText(Model.Status)</span>
    </div>
    <div class="mb-3 text-muted">
        <span><i class="bi bi-person"></i> Tác giả: @Model.AuthorName</span>
        <span class="ms-3"><i class="bi bi-tag"></i> @Model.Topic</span>
        <span class="ms-3"><i class="bi bi-calendar"></i> @Model.TimeStamp.ToString("yyyy-MM-dd")</span>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5>Tóm tắt</h5>
        </div>
        <div class="card-body">
            <p>@Model.Abstract</p>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5>Nội dung</h5>
        </div>
        <div class="card-body">
            <div class="article-content">
                @{
                    // Display content with proper formatting
                    var paragraphs = Model.Content.Split("\n\n", StringSplitOptions.RemoveEmptyEntries);
                    foreach (var paragraph in paragraphs)
                    {
                        <p>@paragraph</p>
                    }
                }
            </div>
        </div>
    </div>

    <div class="mt-4">
        <div class="d-flex justify-content-between">
            <a asp-action="Dashboard" asp-route-page="@Model.Page" asp-route-statusFilter="@Model.StatusFilter" class="btn btn-outline-secondary">Quay lại</a>
            <div>
                @if (Model.Status == ArticleStatus.Pending)
                {
                    <form asp-controller="Admin" asp-action="ApproveArticle" asp-route-id="@Model.Id" asp-route-page="@Model.Page" asp-route-statusFilter="@Model.StatusFilter" method="post" class="d-inline">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Phê duyệt
                        </button>
                    </form>
                    <form asp-controller="Admin" asp-action="RejectArticle" asp-route-id="@Model.Id" asp-route-page="@Model.Page" asp-route-statusFilter="@Model.StatusFilter" method="post" class="d-inline ms-2">
                        <button type="submit" class="btn btn-danger">
                            <i class="bi bi-x-circle"></i> Từ chối
                        </button>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            ArticleStatus.Pending => "bg-warning text-dark",
            ArticleStatus.Approved => "bg-success",
            ArticleStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
    
    public string GetStatusText(string status)
    {
        return status switch
        {
            ArticleStatus.Pending => "Đang chờ",
            ArticleStatus.Approved => "Đã duyệt",
            ArticleStatus.Rejected => "Từ chối",
            _ => "Không xác định"
        };
    }
}